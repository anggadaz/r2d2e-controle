/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpcoesTanque.java
 *
 * Created on 22/10/2010, 16:17:00
 */
package br.ufrn.controle.fuzzycontroller.view.retractable;

import br.ufrn.controle.fuzzycontroller.domain.SelectionsGraph;
import br.ufrn.controle.fuzzycontroller.handler.GraphHandler;
import br.ufrn.controle.fuzzycontroller.shared.ConstantsGraph;
import br.ufrn.siga.component.retractable.RetractablePanelContent;
import java.awt.CardLayout;

/**
 *
 * @author Demetrios
 */
public class TankOptionsPanel extends javax.swing.JPanel implements RetractablePanelContent {

    private boolean compact;
    private final static String CARD_CHECK = "cardCheck";
    private final static String CARD_COMPACT = "cardCompact";
    private SelectionsGraph selectionsGraph;
    private GraphHandler graphHandler;
    private GraphHandler graphControlHandler;

    /** Creates new form OpcoesTanque
     * @param selectionsGraph
     */
    public TankOptionsPanel(SelectionsGraph selectionsGraph) {
        initComponents();
        this.selectionsGraph = selectionsGraph;
    }

    public TankOptionsPanel(SelectionsGraph selectionsGraph, GraphHandler graphHandler) {
        initComponents();
        this.selectionsGraph = selectionsGraph;
        this.graphHandler = graphHandler;
    }

    public TankOptionsPanel(SelectionsGraph selectionsGraph, GraphHandler graphHandler, GraphHandler graphControlHandler) {
        initComponents();
        this.selectionsGraph = selectionsGraph;
        this.graphHandler = graphHandler;
        this.graphControlHandler = graphControlHandler;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCheck = new br.ufrn.siga.component.gradient.GradientPanel();
        translucentPanel1 = new br.ufrn.siga.component.translucent.TranslucentPanel();
        chkTank1 = new javax.swing.JCheckBox();
        chkTank2 = new javax.swing.JCheckBox();
        chkDer1 = new javax.swing.JCheckBox();
        chkDer2 = new javax.swing.JCheckBox();
        chkError1 = new javax.swing.JCheckBox();
        chkError2 = new javax.swing.JCheckBox();
        chkSetPoint = new javax.swing.JCheckBox();
        chkFuzzy = new javax.swing.JCheckBox();
        panelCompact = new br.ufrn.siga.component.gradient.GradientPanel();
        lblOptions = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.CardLayout());

        panelCheck.setColor1(new java.awt.Color(255, 255, 255));
        panelCheck.setColor2(new java.awt.Color(119, 166, 110));

        translucentPanel1.setBlur(40);
        translucentPanel1.setTransparency(50);
        translucentPanel1.setLayout(new java.awt.GridLayout(8, 1));

        chkTank1.setSelected(true);
        chkTank1.setText("Nivel do Tanque 1");
        chkTank1.setOpaque(false);
        chkTank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTank1ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkTank1);

        chkTank2.setSelected(true);
        chkTank2.setText("Nivel do Tanque 2");
        chkTank2.setOpaque(false);
        chkTank2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTank2ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkTank2);

        chkDer1.setSelected(true);
        chkDer1.setText(org.openide.util.NbBundle.getMessage(TankOptionsPanel.class, "TankOptionsPanel.chkDer1.text")); // NOI18N
        chkDer1.setOpaque(false);
        chkDer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDer1ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkDer1);

        chkDer2.setSelected(true);
        chkDer2.setText(org.openide.util.NbBundle.getMessage(TankOptionsPanel.class, "TankOptionsPanel.chkDer2.text")); // NOI18N
        chkDer2.setOpaque(false);
        chkDer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDer2ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkDer2);

        chkError1.setSelected(true);
        chkError1.setText("Erro do Tanque1");
        chkError1.setOpaque(false);
        chkError1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkError1ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkError1);

        chkError2.setSelected(true);
        chkError2.setText("Erro do Tanque2");
        chkError2.setOpaque(false);
        chkError2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkError2ActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkError2);

        chkSetPoint.setSelected(true);
        chkSetPoint.setText("SetPoint");
        chkSetPoint.setOpaque(false);
        chkSetPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSetPointActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkSetPoint);

        chkFuzzy.setSelected(true);
        chkFuzzy.setText(org.openide.util.NbBundle.getMessage(TankOptionsPanel.class, "TankOptionsPanel.chkFuzzy.text")); // NOI18N
        chkFuzzy.setOpaque(false);
        chkFuzzy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFuzzyActionPerformed(evt);
            }
        });
        translucentPanel1.add(chkFuzzy);

        javax.swing.GroupLayout panelCheckLayout = new javax.swing.GroupLayout(panelCheck);
        panelCheck.setLayout(panelCheckLayout);
        panelCheckLayout.setHorizontalGroup(
            panelCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(translucentPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelCheckLayout.setVerticalGroup(
            panelCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(translucentPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(panelCheck, "cardCheck");

        panelCompact.setColor1(new java.awt.Color(255, 255, 255));
        panelCompact.setColor2(new java.awt.Color(119, 166, 110));

        lblOptions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOptions.setText("Opções Selecionados");

        lblNumber.setText("5");

        javax.swing.GroupLayout panelCompactLayout = new javax.swing.GroupLayout(panelCompact);
        panelCompact.setLayout(panelCompactLayout);
        panelCompactLayout.setHorizontalGroup(
            panelCompactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCompactLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblOptions)
                .addGap(27, 27, 27))
        );
        panelCompactLayout.setVerticalGroup(
            panelCompactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCompactLayout.createSequentialGroup()
                .addGroup(panelCompactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOptions)
                    .addComponent(lblNumber))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        add(panelCompact, "cardCompact");
    }// </editor-fold>//GEN-END:initComponents

    private void chkTank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTank1ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setLevel1Selected(chkTank1.isSelected());
        if (!chkTank1.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.NIVEL1);
        }
    }//GEN-LAST:event_chkTank1ActionPerformed

    private void chkTank2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTank2ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setLevel2Selected(chkTank2.isSelected());
        if (!chkTank2.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.NIVEL2);
        }
    }//GEN-LAST:event_chkTank2ActionPerformed

    private void chkError1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkError1ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setError1Selected(chkError1.isSelected());
        if (!chkError1.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.ERRO1);
        }
    }//GEN-LAST:event_chkError1ActionPerformed

    private void chkError2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkError2ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setError2Selected(chkError2.isSelected());
        if (!chkError2.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.ERRO2);
        }
    }//GEN-LAST:event_chkError2ActionPerformed

    private void chkSetPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSetPointActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setSetPointSelected(chkSetPoint.isSelected());
        if (!chkSetPoint.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.SET_POINT);
        }
    }//GEN-LAST:event_chkSetPointActionPerformed

    private void chkDer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDer1ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setDer1(chkDer1.isSelected());
        if (!chkDer1.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.DERIVATE_TANK1);
        }
    }//GEN-LAST:event_chkDer1ActionPerformed

    private void chkDer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDer2ActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setDer2(chkDer2.isSelected());
        if (!chkDer2.isSelected()) {
            graphHandler.removeSerie(ConstantsGraph.DERIVATE_TANK2);
        }
    }//GEN-LAST:event_chkDer2ActionPerformed

    private void chkFuzzyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFuzzyActionPerformed
        // TODO add your handling code here:
        selectionsGraph.setSaidaFuzzy(chkFuzzy.isSelected());
        if (!chkFuzzy.isSelected()) {
            graphControlHandler.removeSerie(ConstantsGraph.SINAL_FUZZY);
        }
    }//GEN-LAST:event_chkFuzzyActionPerformed

    private void changeCard(String card) {
        CardLayout layout = (CardLayout) getLayout();
        layout.show(this, card);
    }

    public void showCompact() {
        compact = true;

        updateNumbSelection();

        changeCard(CARD_COMPACT);

    }

    private void updateNumbSelection() {
        int count = 0;
        if (chkError1.isSelected()) {
            count++;
        }
        if (chkError2.isSelected()) {
            count++;
        }
        if (chkSetPoint.isSelected()) {
            count++;
        }
        if (chkTank1.isSelected()) {
            count++;
        }
        if (chkTank2.isSelected()) {
            count++;
        }
        if (chkDer1.isSelected()) {
            count++;
        }
        if (chkDer2.isSelected()) {
            count++;
        }
        if (chkFuzzy.isSelected()) {
            count++;
        }

        lblNumber.setText(Integer.toString(count));
    }

    public void showFull() {
        compact = false;
        changeCard(CARD_CHECK);
    }

    public boolean isCompactView() {
        return compact;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkDer1;
    private javax.swing.JCheckBox chkDer2;
    private javax.swing.JCheckBox chkError1;
    private javax.swing.JCheckBox chkError2;
    private javax.swing.JCheckBox chkFuzzy;
    private javax.swing.JCheckBox chkSetPoint;
    private javax.swing.JCheckBox chkTank1;
    private javax.swing.JCheckBox chkTank2;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblOptions;
    private br.ufrn.siga.component.gradient.GradientPanel panelCheck;
    private br.ufrn.siga.component.gradient.GradientPanel panelCompact;
    private br.ufrn.siga.component.translucent.TranslucentPanel translucentPanel1;
    // End of variables declaration//GEN-END:variables
}
